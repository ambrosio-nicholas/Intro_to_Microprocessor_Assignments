' Nicholas Ambrosio - Project 3 - 10/08/2025
' This program should simulate a traffic arm that blocks a gated entrance.
' It requires the correct code to be opened, and it has lights and an emergency button.

' {$STAMP BS2}
' {$PBASIC 2.5}

'Set names of the pins I will use
'pushButton1     PIN 0
'pushButton2     PIN 1
'pushButton3     PIN 3
'emergencyButton PIN 4
redLED           PIN 5
yellowLED        PIN 6
greenLED         PIN 7
servo            PIN 14

'Initialize some variables (including how many times each pushbutton has to be pressed)
firstNum VAR Byte
firstNum = 2 ' First num of code

secNum VAR Byte
secNum = 3 ' Second num of code

thirdNum VAR Byte
thirdNum = 4 ' Third num of code

totalNumOfPushes VAR Byte
totalNumOfPushes = firstNum + secNum + thirdNum

timesPressed VAR Byte
timesPressed = 0

timesPB1Pressed VAR Byte
timesPB2Pressed VAR Byte
timesPB3Pressed VAR Byte

counter VAR Word
counter2 VAR Word
beenPressed VAR Bit
emergencyBeenPressed VAR Bit
emergencyBeenPressed = 0

main:
'Start with the gate closed and the red LED on
HIGH redLED
LOW yellowLED
LOW greenLED

'DEBUG ? emergencyBeenPressed

FOR counter = 1 TO 10 '10 20ms pulses
  PULSOUT servo, 265 '260 is as close to 0 degrees for my servo
  PAUSE 20
  GOSUB checkEmergency
NEXT

DO
  ' Clear out any past codes
  GOSUB clearCode

  'Let the user enter a code
  FOR timesPressed = 1 TO totalNumOfPushes 'Check for all button presses
    DO
      beenPressed = 0 'Toggle our detector to false
      IF (IN0 = 1) AND (timesPB2Pressed = 0) AND (timesPB3Pressed = 0) THEN 'AND (timesPressed < 4) Check for PB1, Make sure PB 2 or 3 hasn't been pushed
        PAUSE 150
        timesPB1Pressed = timesPB1Pressed + 1 'Add to its count
        beenPressed = 1
        'DEBUG "1 "
      ELSEIF (IN1 = 1) AND (timesPB1Pressed > 0) AND (timesPB3Pressed = 0) THEN 'AND (timesPressed < 8) Check for PB2, Make sure PB 3 hasn't been pushed, make sure PB1 has been pressed
        PAUSE 150
        timesPB2Pressed = timesPB2Pressed + 1 'Add to its count
        beenPressed = 1
        'DEBUG "2 "
      ELSEIF (IN3 = 1) AND (timesPB2Pressed > 0) THEN 'AND (timesPressed < 12) Check for PB3, make sure PB2 has been pressed
        PAUSE 150
        timesPB3Pressed = timesPB3Pressed + 1 'Add to its count
        beenPressed = 1
        'DEBUG "3 "
      ELSEIF (IN4 = 1) THEN
        'DEBUG "HERE"
        PAUSE 150
        emergencyBeenPressed = 1
      ELSEIF (IN3 = 1 OR IN1 = 1 OR IN0 = 1) THEN
        PAUSE 150
        beenPressed = 1
      ENDIF
      PAUSE 50
      GOSUB checkEmergency
    LOOP UNTIL beenPressed = 1 'Keep checking until a button has been pressed
     ' DEBUG "X "
    GOSUB checkEmergency
  NEXT 'Increment timespressed

  DEBUG "Code Entered", CR
  'Check the code
  IF (timesPB1Pressed = firstNum) AND (timesPB2Pressed = secNum) AND (timesPB3Pressed = thirdNum) THEN
    'If the code is right
    LOW redLED
    FOR counter2 = 1 TO 10 'flash yellow LED ten times (.25s on, .25s off)
      HIGH yellowLED
      'DEBUG "FLASH"
      FOR counter = 1 TO 50
        PAUSE 1
        GOSUB checkEmergency
      NEXT
      LOW yellowLED
      FOR counter = 1 TO 50
        PAUSE 1
        GOSUB checkEmergency
      NEXT
    NEXT

    'open gate
    FOR counter = 1 TO 10 '10 20ms pulses
      PULSOUT servo, 750 'should be about 90 degrees
      PAUSE 20
      GOSUB checkEmergency
    NEXT

    'turn on green LED
    HIGH greenLED
    LOW yellowLED

    FOR counter = 1 TO 1000
      PAUSE 1 'wait 10 seconds
      GOSUB checkEmergency
    NEXT

    LOW greenLED

    FOR counter2 = 1 TO 10 'flash yellow LED ten times (.25s on, .25s off)
      HIGH yellowLED
      'DEBUG "FLASH"
      FOR counter = 1 TO 50
        PAUSE 1
        GOSUB checkEmergency
      NEXT
      LOW yellowLED
      FOR counter = 1 TO 50
        PAUSE 1
        GOSUB checkEmergency
      NEXT
    NEXT

    'close gate
    FOR counter = 1 TO 10 '10 20ms pulses
      PULSOUT servo, 260 'should be about 90 degrees
      PAUSE 20
      GOSUB checkEmergency
    NEXT

    'turn on red LED
    HIGH redLED
  ELSE
    'If the code is wrong
    FOR counter = 1 TO 3 'flash red LED three times (.25s on, .25s off)
      HIGH redLED
      PAUSE 250
      GOSUB checkEmergency
      LOW redLED
      PAUSE 250
      GOSUB checkEmergency
    NEXT

    HIGH redLED
  ENDIF
LOOP
RETURN

' A Subroutine for when the emergeny button has been pressed
checkEmergency:
  IF (IN4 = 1) THEN
  PAUSE 20
    DEBUG ? emergencyBeenPressed
    emergencyBeenPressed = 1
  ENDIF

  IF emergencyBeenPressed = 1 THEN
    emergencyBeenPressed = 0 'reset the bool
    LOW redLED
    LOW greenLED

    'open gate
    FOR counter = 1 TO 10 '10 20ms pulses
      PULSOUT servo, 750 'should be about 90 degrees
      PAUSE 20
    NEXT

    DO
      HIGH yellowLED
      FOR counter = 1 TO 100
        PAUSE 1
        IF (IN4 = 1) THEN
          emergencyBeenPressed = 1
        ENDIF
      NEXT
      LOW yellowLED
      FOR counter = 1 TO 100
        PAUSE 1
        IF (IN4 = 1) THEN
          emergencyBeenPressed = 1
        ENDIF
      NEXT
      DEBUG ? emergencyBeenPressed
    LOOP UNTIL emergencyBeenPressed = 1

    GOSUB clearCode
    emergencyBeenPressed = 0 'reset the bool

    'close gate
    FOR counter = 1 TO 10 '10 20ms pulses
      PULSOUT servo, 265 'should be about 90 degrees
      PAUSE 20
      GOSUB checkEmergency
    NEXT

    'turn on red LED
    HIGH redLED
    GOSUB main
  ENDIF
  RETURN

  clearCode:
  'DEBUG "Code Cleared"
    timesPB1Pressed = 0
    timesPB2Pressed = 0
    timesPB3Pressed = 0
    timesPressed = 1
  RETURN